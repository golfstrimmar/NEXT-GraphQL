datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int             @id @default(autoincrement())
  email        String          @unique
  password     String?
  googleId     String?
  name         String?
  isLoggedIn   Boolean         @default(false)
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  createdChats Chat[]          @relation("ChatCreator")
  joinedChats  Chat[]          @relation("ChatParticipant")
  sentMessages Message[]       @relation("SentMessages")
  posts        Post[]          // authored posts
  reactions    PostReaction[]  // user reactions to posts
}

model Chat {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  creatorId     Int
  participantId Int
  creator       User      @relation("ChatCreator", fields: [creatorId], references: [id], onDelete: Cascade)
  participant   User      @relation("ChatParticipant", fields: [participantId], references: [id], onDelete: Cascade)
  messages      Message[] @relation("ChatMessages")
  @@unique([creatorId, participantId])
}

model Message {
  id        Int      @id @default(autoincrement())
  text      String
  sender    User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId  Int
  chat      Chat     @relation("ChatMessages", fields: [chatId], references: [id])
  chatId    Int
  createdAt DateTime @default(now())
}

model Post {
  id          Int             @id @default(autoincrement())
  text        String
  title       String
  category    String
  createdAt   DateTime        @default(now())
  creatorId   Int
  creator     User            @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  reactions   PostReaction[]  // reactions to this post
}

model PostReaction {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  reaction  ReactionType
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId], name: "userId_postId")
}

enum ReactionType {
  LIKE
  DISLIKE
}
