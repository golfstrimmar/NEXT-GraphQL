datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  password     String?   
  googleId     String?   
  name         String?
  isLoggedIn   Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  createdChats Chat[]    @relation("ChatCreator")
  joinedChats  Chat[]    @relation("ChatParticipant")
  sentMessages Message[] @relation("SentMessages")
  posts        Post[]    // добавляем связь с постами
}

model Chat {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now())
  creatorId    Int
  participantId Int
  creator      User      @relation("ChatCreator", fields: [creatorId], references: [id], onDelete: Cascade)
  participant  User      @relation("ChatParticipant", fields: [participantId], references: [id], onDelete: Cascade)
  messages     Message[] @relation("ChatMessages")
  @@unique([creatorId, participantId])
}

model Message {
  id        Int      @id @default(autoincrement())
  text      String
  sender    User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId  Int
  chat      Chat     @relation("ChatMessages", fields: [chatId], references: [id])
  chatId    Int
  createdAt DateTime @default(now())
}

model Post {
  id          Int      @id @default(autoincrement())
  text        String
  title       String
  category    String
  createdAt   DateTime @default(now())
  creatorId   Int
  creator     User     @relation(fields: [creatorId], references: [id], onDelete: Cascade)
}
