datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String
  password   String?  
  googleId   String?  
  createdAt  DateTime  @default(now())
  isLoggedIn Boolean   @default(false)
  
  // Связи с чатами
  chatsCreated Chat[]   @relation("ChatCreator")
  chatsParticipated Chat[] @relation("ChatParticipant")
  
  // Связь с сообщениями
  messages Message[]    @relation("UserMessages")
}

model Chat {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isActive    Boolean   @default(true)
  
  // Связи с пользователями (каскадное удаление здесь)
  creatorId   Int
  creator     User      @relation("ChatCreator", fields: [creatorId], references: [id], onDelete: Cascade)
  
  participantId Int
  participant   User    @relation("ChatParticipant", fields: [participantId], references: [id], onDelete: Cascade)
  
  // Связь с сообщениями
  messages    Message[] 
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  
  // Связь с чатом (каскадное удаление здесь)
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId    Int
  
  // Связь с отправителем (каскадное удаление здесь)
  sender    User     @relation("UserMessages", fields: [senderId], references: [id], onDelete: Cascade)
  senderId  Int
}